/*Auto generated by Kirby v1.0.0 - Tue Feb 06 2018 18:35:45 GMT-0800 (PST)
  

*/

const K = require("kirby");
const str = K["str"];
const not_DASH_empty = K["not_DASH_empty"];
const kirbystdlibref = require("kirby");
const __module_namespace__ = "czlab.elmo.core.Skaro";
require("crypto-js");
const global = (((typeof (window) === "undefined")) ?
  {} :
  window);
var CjsBase64,
  CjsUtf8;
(((typeof (HTMLElement) === "undefined")) ?
  (global["HTMLElement"] = function() {
    let ____args = Array.prototype.slice.call(arguments);
    return null;
  }) :
  null);
(
(!((typeof (CryptoJS) === "undefined"))) ?
  (global["CryptoJS"] = CryptoJS) :
  null);
(
some_QMRK(global.CryptoJS) ?
  (function() {
    return (CjsBase64 = global.CryptoJS.enc.Base64, CjsUtf8 = global.CryptoJS.enc.Utf8);
  }).call(this) :
  null);
////////////////////////////////////////////////////////////////////////////////
//fn: [strPadRight] in file: Skaro.ky, line: 37
const strPadRight = function(src, len, pad) {
  return [src, pad.repeat((len + 1))].join("").slice(0, len);
};
////////////////////////////////////////////////////////////////////////////////
//fn: [strPadLeft] in file: Skaro.ky, line: 42
const strPadLeft = function(src, len, pad) {
  return [pad.repeat((len + 1)), src].join("").slice((-1 * len));
};
////////////////////////////////////////////////////////////////////////////////
//fn: [ssplit] in file: Skaro.ky, line: 47
//Safe split string.
const ssplit = function(s, sep) {
  return (s || "").split(sep).filter(function() {
    let ____args = Array.prototype.slice.call(arguments);
    return not_DASH_empty(____args[0]);
  });
};
////////////////////////////////////////////////////////////////////////////////
//fn: [now] in file: Skaro.ky, line: 52
//Get the current time.
const now = function() {
  return (Date.now || function() {
      let ____args = Array.prototype.slice.call(arguments);
      return new Date().getTime();
    });
};
////////////////////////////////////////////////////////////////////////////////
//fn: [capitalize] in file: Skaro.ky, line: 57
//Capitalize the first char of the string.
const capitalize = function(s) {
  return [s.charAt(0).toUpperCase(), s.slice(1)].join("");
};
////////////////////////////////////////////////////////////////////////////////
//fn: [randRange] in file: Skaro.ky, line: 63
//Pick a random number between these 2 limits.
const randRange = function(from, to) {
  return Math.floor((from + (Math.random() * ((to - from) + 1))));
};
////////////////////////////////////////////////////////////////////////////////
//fn: [prettyNumber] in file: Skaro.ky, line: 71
//Maybe pad the number with zeroes.
const prettyNumber = function(num, digits) {
  return strPadLeft(Number(num).toString(), digits, "0");
};
////////////////////////////////////////////////////////////////////////////////
//fn: [getWebSockProtocol] in file: Skaro.ky, line: 78
//Get the websocket transport protocol.
const getWebSockProtocol = function(secure_QMRK) {
  return (secure_QMRK ?
    "wss://" :
    "ws://");
};
////////////////////////////////////////////////////////////////////////////////
//fn: [nowMillis] in file: Skaro.ky, line: 84
//Get the current time in milliseconds.
const nowMillis = function() {
  return new Date().getTime();
};
////////////////////////////////////////////////////////////////////////////////
//fn: [boolify] in file: Skaro.ky, line: 90
//Cast the value to boolean.
const boolify = function(obj) {
  return (obj ?
    true :
    false);
};
////////////////////////////////////////////////////////////////////////////////
//fn: [isSSL?] in file: Skaro.ky, line: 94
//Returns true if the web address is ssl.
const isSSL_QMRK = function() {
  return ((((typeof (window) !== "undefined")) && window.location) ?
    (window.location.protocol.indexOf("https") >= 0) :
    null);
};
////////////////////////////////////////////////////////////////////////////////
//fn: [fmtUrl] in file: Skaro.ky, line: 102
//Format a URL based on the current web address host.
const fmtUrl = function(scheme, uri) {
  return ((((typeof (window) !== "undefined")) && window.location) ?
    [scheme, window.location.host, uri].join("") :
    "");
};
////////////////////////////////////////////////////////////////////////////////
//fn: [isMobile?] in file: Skaro.ky, line: 110
//Test if the client is a mobile device.
const isMobile_QMRK = function(navigator) {
  return (some_QMRK(navigator) ?
    /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) :
    null);
};
////////////////////////////////////////////////////////////////////////////////
//fn: [isSafari] in file: Skaro.ky, line: 118
//Test if the client is Safari browser.
const isSafari = function(navigator) {
  return (some_QMRK(navigator) ?
    (/Safari/.test(navigator.userAgent) && /Apple Computer/.test(navigator.vendor)) :
    null);
};
////////////////////////////////////////////////////////////////////////////////
//fn: [pde] in file: Skaro.ky, line: 128
//Prevent default propagation of this event.
const pde = function(e) {
  return (some_QMRK(e) ?
    (function() {
      return (e.preventDefault() ?
        e.preventDefault() :
        (e["returnValue"] = false));
    }).call(this) :
    null);
};
////////////////////////////////////////////////////////////////////////////////
//fn: [randSign] in file: Skaro.ky, line: 138
//Randomly pick positive or negative.
const randSign = function() {
  return ((Math.random() < 0.5) ?
    -1 :
    1);
};
////////////////////////////////////////////////////////////////////////////////
//fn: [randArrayItem] in file: Skaro.ky, line: 144
//Randomly choose an item from this array.
const randArrayItem = function(arr) {
  return ((0 === kirbystdlibref.count(arr)) ?
    undefined :
    ((1 === kirbystdlibref.count(arr)) ?
      kirbystdlibref.getProp(arr, 0) :
      (true ?
        kirbystdlibref.getProp(arr, Math.floor((arr.length * Math.random()))) :
        null)));
};
////////////////////////////////////////////////////////////////////////////////
//fn: [randPercent] in file: Skaro.ky, line: 155
//Randomly choose a percentage in step of 10.
const randPercent = function() {
  return randArrayItem([0.1, 0.9, 0.3, 0.7, 0.6, 0.5, 0.4, 0.8, 0.2]);
};
////////////////////////////////////////////////////////////////////////////////
//fn: [rand] in file: Skaro.ky, line: 161
//Pick a random number.
const rand = function(limit) {
  return Math.floor((limit * Math.random()));
};
////////////////////////////////////////////////////////////////////////////////
//fn: [toBasicAuthHeader] in file: Skaro.ky, line: 167
//Format input into HTTP Basic Authentication.
const toBasicAuthHeader = function(user, pwd) {
  return conj_BANG([], "Authorization", ["Basic ", b64Encode(["", user, ":", pwd].join(""))].join(""));
};
////////////////////////////////////////////////////////////////////////////////
//fn: [toUtf8] in file: Skaro.ky, line: 175
//Convert string to utf-8 string.
const toUtf8 = function(s) {
  return CjsUtf8.stringify(CjsUtf8.parse(s));
};
////////////////////////////////////////////////////////////////////////////////
//fn: [b64Encode] in file: Skaro.ky, line: 181
//Base64 encode the string.
const b64Encode = function(s) {
  return CjsBase64.stringify(CjsUtf8.parse(s));
};
////////////////////////////////////////////////////////////////////////////////
//fn: [b64Decode] in file: Skaro.ky, line: 187
//Base64 decode the string.
const b64Decode = function(s) {
  return CjsUtf8.stringify(CjsBase64.parse(s));
};
////////////////////////////////////////////////////////////////////////////////
//fn: [removeFromArray] in file: Skaro.ky, line: 193
//Maybe remove this item from this array.
const removeFromArray = function(arr, item) {
  let index = arr.indexOf(item);
  for (let ____break = false; ((!____break) && (index !== -1));) {
    arr.splice(index, 1);
    (
    index = arr.indexOf(item));
  }
  return arr;
};
module.exports = {
  da57bc0172fb42438a11e6e8778f36fb: {
    ns: "czlab.elmo.core.Skaro",
    macros: {}
  },
  global: global,
  CjsBase64: CjsBase64,
  CjsUtf8: CjsUtf8,
  strPadRight: strPadRight,
  strPadLeft: strPadLeft,
  ssplit: ssplit,
  now: now,
  capitalize: capitalize,
  randRange: randRange,
  prettyNumber: prettyNumber,
  getWebSockProtocol: getWebSockProtocol,
  nowMillis: nowMillis,
  boolify: boolify,
  isSSL_QMRK: isSSL_QMRK,
  fmtUrl: fmtUrl,
  isMobile_QMRK: isMobile_QMRK,
  isSafari: isSafari,
  pde: pde,
  randSign: randSign,
  randArrayItem: randArrayItem,
  randPercent: randPercent,
  rand: rand,
  toBasicAuthHeader: toBasicAuthHeader,
  toUtf8: toUtf8,
  b64Encode: b64Encode,
  b64Decode: b64Decode,
  removeFromArray: removeFromArray
};