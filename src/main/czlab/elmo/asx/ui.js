/*Auto generated by Kirby v1.0.0 - Thu Feb 15 2018 01:30:56 GMT-0800 (PST)
  czlab.elmo.core.ui

*/

const kirbystdlibref = require("kirby");
const __module_namespace__ = "czlab.elmo.core.ui";
const Circle = cc.Class.extend({
  draw: function(ctx, styleObj) {
    ctx.beginPath();
    (
    ctx.strokeStyle = styleObj.stroke.style);
    (
    ctx.lineWidth = styleObj.line.width);
    ctx.arc(this.x, this.y, this.radius, 0, (2 * Math.PI), true);
    return ctx.stroke();
  },
  ctor: function(x, y, radius) {
    this._super();
    return (this["x"] = x, this["y"] = y, this["radius"] = radius);
  }
});
const Line = cc.Class.extend({
  draw: function(ctx, styleObj) {
    ctx.beginPath();
    ctx.moveTo(this.x1, this.y1);
    ctx.lineTo(this.x2, this.y2);
    (
    ctx.strokeStyle = styleObj.stroke.style);
    (
    ctx.lineWidth = styleObj.line.width);
    if (some_QMRK(styleObj.line.cap)) {
      (
      ctx.lineCap = styleObj.line.cap);
    }
    return ctx.stroke();
  },
  ctor: function(x1, y1, x2, y2) {
    this._super();
    return (this["x1"] = x1, this["y1"] = y1, this["x2"] = x2, this["y2"] = y2);
  }
});
const TextStyle = cc.Class.extend({
  ctor: function() {
    this._super();
    return (this["align"] = "left", this["base"] = "top", this["fill"] = "#dddddd", this["font"] = "14px 'Architects Daughter'");
  }
});
const ____macros = {
  "defcz": "(macro* defcz (name par & more) (syntax-quote (const (unquote name) (.extend (unquote par) (object (splice-unquote more))))))"
};
module.exports = {
  da57bc0172fb42438a11e6e8778f36fb: {
    ns: "czlab.elmo.core.ui",
    macros: ____macros
  },
  Circle: Circle,
  Line: Line,
  TextStyle: TextStyle
};