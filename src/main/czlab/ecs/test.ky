;; Copyright (c) 2013-2018, Kenneth Leung. All rights reserved.
;; The use and distribution terms for this software are covered by the
;; Eclipse Public License 1.0 (http://opensource.org/licenses/eclipse-1.0.php)
;; which can be found in the file epl-v10.html at the root of this distribution.
;; By using this software in any fashion, you are agreeing to be bound by
;; the terms of this license.
;; You must not remove this notice, or any other, from this software.

(ns ^{:doc ""
      :author "Kenneth Leung"}

  czlab.elmo.ecs.test

  (:require ["./Ecs" :as ecs]
            ["kirby"
             :as K :refer [some? println runtest]]))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(deftype Leg [ecs/Component]
  (constructor [&[n]]
    (super n)
    (assign! this :tpid :leg :length 50)))

(deftype Arm [ecs/Component]
  (constructor [&[n]]
    (super n)
    (assign! this :tpid :arm :length 10)))

(deftype Person [ecs/Entity]
  (constructor [e]
    (super e)
    (.checkin this (new Arm this))
    (.checkin this (new Leg this))))

(const- engine (new ecs/Engine ))

(const- pool1 (new ecs/EntityPool
                   "p1"
                   #(new Person engine) 10))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(deftest ecs-test

  (ensure (zero? (.size pool1)) "pool,size=0")
  (ensure (some? (.get pool1)) "pool,get")
  (ensure (= 10 (.size pool1)) "pool,size>0"))


(println (runtest ecs-test "test: ecs"))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;EOF



