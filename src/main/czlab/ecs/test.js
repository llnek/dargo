/*Auto generated by Kirby v1.0.0 - Fri Feb 02 2018 17:40:54 GMT-0800 (PST)
  

*/

const ecs = require("./Ecs");
const K = require("kirby");
const some_QMRK = K["some_QMRK"];
const println = K["println"];
const runtest = K["runtest"];
const kirbystdlibref = require("kirby");
const __module_namespace__ = "czlab.elmo.ecs.test";
class Leg extends ecs.Component {
  ////////////////////////////////////////////////////////////////////////////////
  //fn: [constructor] in file: test.ky, line: 20
  constructor() {
    let GS__4 = Array.prototype.slice.call(arguments, 0);
    let n = GS__4[0];
    super(n);
    (this["tpid"] = "leg", this["length"] = 50);
    return this;
  }
}
class Arm extends ecs.Component {
  ////////////////////////////////////////////////////////////////////////////////
  //fn: [constructor] in file: test.ky, line: 25
  constructor() {
    let GS__5 = Array.prototype.slice.call(arguments, 0);
    let n = GS__5[0];
    super(n);
    (this["tpid"] = "arm", this["length"] = 10);
    return this;
  }
}
class Person extends ecs.Entity {
  ////////////////////////////////////////////////////////////////////////////////
  //fn: [constructor] in file: test.ky, line: 30
  constructor(e) {
    super(e);
    this.checkin(new Arm(this));
    this.checkin(new Leg(this));
    return this;
  }
}
const engine = new ecs.Engine();
const pool1 = new ecs.EntityPool("p1", function() {
  let ____args = Array.prototype.slice.call(arguments);
  return new Person(engine);
}, 10);
const ecs_DASH_test = function() {
  let ____args = Array.prototype.slice.call(arguments);
  return [kirbystdlibref.ensureTest(((pool1.size() === 0)), "pool,size=0"), kirbystdlibref.ensureTest(some_QMRK(pool1.get()), "pool,get"), kirbystdlibref.ensureTest((10 === pool1.size()), "pool,size>0")];
};
println(runtest(ecs_DASH_test, "test: ecs"));
module.exports = {
  da57bc0172fb42438a11e6e8778f36fb: {
    ns: "czlab.elmo.ecs.test",
    macros: {}
  },
  Leg: Leg,
  Arm: Arm,
  Person: Person,
  ecs_DASH_test: ecs_DASH_test
};